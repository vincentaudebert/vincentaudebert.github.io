<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>VatWeb &amp;lt;CODE&amp;gt; Blog</title>
    <description>My blog which gives answers to random coding problems.</description>
    <link>http://vincentaudebert.github.io/</link>
    <atom:link href="http://vincentaudebert.github.io/feed.xml" rel="self" type="application/rss+xml" />
    
      <item>
        <title>Remove hash in a React App served by BrowserSync</title>
        <description>&lt;p&gt;You probably noticed that by default react app navigation is using the famous &lt;code class=&quot;highlighter-rouge&quot;&gt;/#/&lt;/code&gt; in the url.&lt;/p&gt;

&lt;p&gt;But what if you want to have “proper” urls like &lt;code class=&quot;highlighter-rouge&quot;&gt;domain.com/foo/bar&lt;/code&gt; instead of &lt;code class=&quot;highlighter-rouge&quot;&gt;domain.com/#/foo/bar&lt;/code&gt;?&lt;/p&gt;

&lt;h3 id=&quot;the-react-part&quot;&gt;The React part&lt;/h3&gt;

&lt;p&gt;Inside your &lt;a href=&quot;https://facebook.github.io/react/&quot;&gt;React&lt;/a&gt; app you will need to make a simple change.
Change the &lt;code class=&quot;highlighter-rouge&quot;&gt;history&lt;/code&gt; argument for your &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;Router&amp;gt;&lt;/code&gt; from &lt;code class=&quot;highlighter-rouge&quot;&gt;hashHistory&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;browserHistory&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;```
import { Router, browserHistory } from ‘react-router’;&lt;/p&gt;

&lt;p&gt;ReactDOM.render ((
 &amp;lt;Router history={browserHistory} /&amp;gt;
   …
 &amp;lt;/Router&amp;gt;
), document.body);
```&lt;/p&gt;

&lt;h3 id=&quot;the-browsersync-part&quot;&gt;The BrowserSync part&lt;/h3&gt;

&lt;p&gt;Now the other part is to make your &lt;a href=&quot;https://www.browsersync.io/&quot;&gt;BrowserSync&lt;/a&gt; server (gulp task here) able to serve these urls.
To do so, just add some middleware in your config:&lt;/p&gt;

&lt;p&gt;```
const historyApiFallback = require(‘connect-history-api-fallback’);&lt;/p&gt;

&lt;p&gt;…&lt;/p&gt;

&lt;p&gt;gulp.task(‘browser-sync’, function() {
    browserSync({
        server: {
            baseDir: ‘./’,
            middleware: [historyApiFallback()]
        },
        notify: false
    });
});
```&lt;/p&gt;

&lt;p&gt;And then you should be able to access to &lt;code class=&quot;highlighter-rouge&quot;&gt;domain.com/foo/bar&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This post is based on 2 stackoverflow posts:
- &lt;a href=&quot;http://stackoverflow.com/a/33108975/2462089&quot;&gt;One to remove the hash part&lt;/a&gt;
- &lt;a href=&quot;http://stackoverflow.com/a/33798349/2462089&quot;&gt;The other one to configure BrowserSync&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Wed, 24 Feb 2016 04:31:19 +1300</pubDate>
        <link>http://vincentaudebert.github.io/javascript/react/2016/02/24/remove-hash-react-browsersync/</link>
        <guid isPermaLink="true">http://vincentaudebert.github.io/javascript/react/2016/02/24/remove-hash-react-browsersync/</guid>
      </item>
    
      <item>
        <title>Control your Spotify client with your browser</title>
        <description>&lt;p&gt;The beginning of the year is generally light here in New Zealand. You know… the time everybody gets back to work :)&lt;/p&gt;

&lt;p&gt;So I got the chance to explore &lt;a href=&quot;http://redux.js.org/&quot;&gt;Redux&lt;/a&gt;… and I learnt A LOT! What a really cool way to manage the state of your React app.&lt;/p&gt;

&lt;h3 id=&quot;get-started&quot;&gt;Get started&lt;/h3&gt;

&lt;p&gt;First if like me you are not used to Flux and even less to Redux, you should check these &lt;a href=&quot;https://egghead.io/series/getting-started-with-redux&quot;&gt;cool tutorial videos&lt;/a&gt; made by the creator of Redux. It will give you some really useful basics and help you to understand how Redux works.&lt;/p&gt;

&lt;h3 id=&quot;starter-kit&quot;&gt;Starter kit&lt;/h3&gt;

&lt;p&gt;Then, it’s time to get started and write some code.&lt;/p&gt;

&lt;p&gt;And here come the &lt;a href=&quot;https://github.com/rackt/redux/tree/master/examples&quot;&gt;examples&lt;/a&gt; from Redux git repo. Clearly, they are really amazing and you can totally use them as a base for your first small project in Redux.&lt;/p&gt;

&lt;h3 id=&quot;springtunes&quot;&gt;Springtunes&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/springload/springtunes/raw/master/screenshots/sc_springtunes.png?raw=true&quot; alt=&quot;Springtunes screenshot&quot; title=&quot;Springtunes screenshot&quot; /&gt;&lt;/p&gt;

&lt;p&gt;That’s what I did and I ended up creating &lt;a href=&quot;https://www.npmjs.com/package/springtunes&quot;&gt;Springtunes&lt;/a&gt;. A small web app that allows you to control your spotify client from any web browser.&lt;/p&gt;

&lt;p&gt;It’s running an express server on port 3000 and then through the UI, triggers actions to the actual Spotify client.&lt;/p&gt;

&lt;p&gt;All the client side is made using React and Redux. Don’t hesitate to have a look at the source code but it’s mostly based on the ‘async’ example from Redux repo.&lt;/p&gt;

&lt;h3 id=&quot;afterwards&quot;&gt;Afterwards&lt;/h3&gt;

&lt;p&gt;That’s the crazy thing… Everything is so clear and well explained in the &lt;a href=&quot;https://egghead.io/series/getting-started-with-redux&quot;&gt;videos&lt;/a&gt;/&lt;a href=&quot;https://github.com/rackt/redux/tree/master/examples&quot;&gt;examples&lt;/a&gt;/&lt;a href=&quot;http://redux.js.org/&quot;&gt;documentation&lt;/a&gt; that you don’t need anything else to get started and nail Redux.&lt;/p&gt;

&lt;p&gt;Enjoy Redux, it looks complex at the beginning but it’s a lot of fun at the end :)&lt;/p&gt;

</description>
        <pubDate>Tue, 02 Feb 2016 04:31:19 +1300</pubDate>
        <link>http://vincentaudebert.github.io/javascript/react/2016/02/02/spotify-springtunes-redux-copy/</link>
        <guid isPermaLink="true">http://vincentaudebert.github.io/javascript/react/2016/02/02/spotify-springtunes-redux-copy/</guid>
      </item>
    
      <item>
        <title>Let&#39;s talk a bit about SEO</title>
        <description>&lt;p&gt;First of all, this is the first blog of the year 2016!&lt;/p&gt;

&lt;p&gt;Happy new year everyone! I hope you had a good break for xmas and new year.&lt;/p&gt;

&lt;p&gt;Now, let’s get back to work and talk a bit about SEO.
I have another big thanks for all of you who are visiting my blog. Recently I reached the milestone of 500 visitors on the last month. I must say it’s good for motivation!&lt;/p&gt;

&lt;p&gt;Noticing an increase in my audience, I’ve been checking quite often my most popular articles and the keywords used to access to them.&lt;/p&gt;

&lt;p&gt;Here are few easy and very general tips about SEO.&lt;/p&gt;

&lt;h3 id=&quot;mobile-version&quot;&gt;Mobile version&lt;/h3&gt;

&lt;p&gt;As you might know, Google pays now a lot of attention to see if your website is responsive or not. By responsive, they mean nicely display on mobile.&lt;/p&gt;

&lt;p&gt;If your website isn’t, it’s more likely that you end up being deindexed or at least not showing up in the top results (let’s call it “deranked”).&lt;/p&gt;

&lt;h3 id=&quot;keywords&quot;&gt;Keywords&lt;/h3&gt;

&lt;p&gt;Well another one which is probably the hardest one. Keywords.
My top 2 articles are &lt;a href=&quot;http://vincentaudebert.github.io/angular/javascript/form/2015/01/29/angularjs-prevent-button-submit-form/&quot;&gt;this one about how to prevent a form submit with AngularJS&lt;/a&gt; and &lt;a href=&quot;http://vincentaudebert.github.io/angular/javascript/select/2014/11/11/angularjs-select-has-empty-value/&quot;&gt;this one about why am I getting an empty value in my select tag, still with AngularJS&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;These two articles are fairly simple but generate a lot of traffic with searches like “angular prevent form submit” or “angularjs select default value”. I’m actually on the first page for these searches.&lt;/p&gt;

&lt;p&gt;So based on these pages, I would say that it’s important to always specify what you are talking about inside your article. Like for this article, it’s all about SEO (Search Engine Optimisation). And then don’t hesitate to use other keywords like “Search Engines” or “Google Robots” which might be used by some users but still relate to your topic.
I know it sounds stupid, but sometimes you can write lines and lines of text without mentionning the main purpose of this text.&lt;/p&gt;

&lt;h3 id=&quot;external-links&quot;&gt;External links&lt;/h3&gt;

&lt;p&gt;If you can, try to always add &lt;a href=&quot;https://moz.com/learn/seo/external-link&quot;&gt;some external links&lt;/a&gt;. The web is made of connections between websites. Don’t keep your sources for you, share them.&lt;/p&gt;

&lt;p&gt;I have read a long time ago that Google would be more inclined to top result a page with external links than one with no links or only internal links.&lt;/p&gt;

&lt;h3 id=&quot;tools&quot;&gt;Tools&lt;/h3&gt;

&lt;p&gt;Last but not least, check your SEO tools everyday or so. Of course there is the world famous &lt;a href=&quot;http://www.google.com/analytics/&quot;&gt;Google Analytics&lt;/a&gt; to check your traffic, etc., but I highly recommend to use the &lt;a href=&quot;https://www.google.com/webmasters/tools&quot;&gt;“Google webmaster tools”&lt;/a&gt; in completion of it. So you can get to know which keywords/articles are a success. How often/Where do you show up in Google results, etc.&lt;/p&gt;

&lt;h3 id=&quot;host-on-a-famous-domain&quot;&gt;Host on a famous domain&lt;/h3&gt;

&lt;p&gt;I’ve read a few months ago that Google might “boost” you if your blog is hosted on a famous domain. As I said earlier, it takes time to get Google trust and it might be easier if your blog is using a subdomain of &lt;a href=&quot;https://wordpress.com&quot;&gt;wordpress.com&lt;/a&gt; or like mine, &lt;a href=&quot;https://pages.github.com/&quot;&gt;github.io&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;keep-your-blog-active&quot;&gt;Keep your blog active&lt;/h3&gt;

&lt;p&gt;Also I noticed, it’s important to keep some activity on your blog. And the more popular you get, the more Google trusts you and is likely to “top result” you.&lt;/p&gt;

&lt;p&gt;At the beginning of your blog, I would suggest to post at least every two weeks. Then once, you start to get few visitors, you can like I do, switch to a more relaxed pace. I try to post every month. It’s good to keep the Google bots visiting your site.&lt;/p&gt;

&lt;p&gt;Don’t hesitate to post your &lt;a href=&quot;https://en.wikipedia.org/wiki/Sitemaps&quot;&gt;sitemap.xml&lt;/a&gt; on Google webmaster tools after you just updated it.
Yes, sitemaps are really important. But nowadays, most of the blogging systems populate one automatically.&lt;/p&gt;

&lt;p&gt;Good luck with your blog/website. SEO is hard work and it takes quite a long time to take effect. NEVER GIVE UP! :)&lt;/p&gt;

</description>
        <pubDate>Sat, 09 Jan 2016 04:31:19 +1300</pubDate>
        <link>http://vincentaudebert.github.io/seo/tips/2016/01/09/seo-blog/</link>
        <guid isPermaLink="true">http://vincentaudebert.github.io/seo/tips/2016/01/09/seo-blog/</guid>
      </item>
    
      <item>
        <title>How to create a React component with ES6</title>
        <description>&lt;p&gt;Let’s keep going with ReactJS. Must say I’m getting addicted :)&lt;/p&gt;

&lt;p&gt;Recently I started a small project and I wanted to use ReactJS and ES6 (&lt;a href=&quot;http://www.ecma-international.org/ecma-262/6.0/&quot;&gt;EcmaScript 2015 6th Edition&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;Turned out that creating a component is a little bit different.
Let me show you a commented skeleton for a component in ES6:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;//Your component inherits from React.Component&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Counter&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;//In ES6, getInitialState() is gone&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;//You need to use the constructor and init your property &#39;state&#39; inside&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;initialCount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;tick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onClick&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;Clicks&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/div&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;    &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//propTypes and defaultProps are now declared as properties on the constructor instead of directly inside the class body.&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//This is how you declare the props for your component&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;Counter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;propTypes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;initialCount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PropTypes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//And how you give them a default value&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;Counter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;defaultProps&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;initialCount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This example comes directly &lt;a href=&quot;https://facebook.github.io/react/docs/reusable-components.html#es6-classes&quot;&gt;from the official ReactJS documentation&lt;/a&gt; that I highly recommend.&lt;/p&gt;

</description>
        <pubDate>Wed, 02 Dec 2015 04:31:19 +1300</pubDate>
        <link>http://vincentaudebert.github.io/javascript/react/2015/12/02/react-component-es6/</link>
        <guid isPermaLink="true">http://vincentaudebert.github.io/javascript/react/2015/12/02/react-component-es6/</guid>
      </item>
    
      <item>
        <title>Publish demo of your React component on GitHub</title>
        <description>&lt;p&gt;Just started at my new job! Exciting!&lt;/p&gt;

&lt;p&gt;And my first mission was to deal with this &lt;a href=&quot;https://github.com/springload/react-svg-icon&quot;&gt;React component&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We wanted to have a nice demo page on a github page for this component.&lt;/p&gt;

&lt;p&gt;Something &lt;a href=&quot;https://springload.github.io/react-svg-icon/&quot;&gt;like this&lt;/a&gt;…&lt;/p&gt;

&lt;p&gt;And it was actually fairly easy. Just had to use &lt;a href=&quot;https://github.com/mzabriskie/rackt-cli&quot;&gt;rackt-cli&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Once rackt-cli is installed (using &lt;code class=&quot;highlighter-rouge&quot;&gt;npm install -g rackt-cli&lt;/code&gt;), create a folder &lt;code class=&quot;highlighter-rouge&quot;&gt;examples&lt;/code&gt; at the root of your project and then everything inside this folder will be taken to a github page for your project using the command &lt;code class=&quot;highlighter-rouge&quot;&gt;rackt pages&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Easy right?&lt;/p&gt;

&lt;p&gt;In my case, I copied a github page theme (index.html + javascripts folder + stylesheets folder) and then modified the index to list my different demos (basic folder + multiple folder). You can see the structure &lt;a href=&quot;https://github.com/springload/react-svg-icon/tree/master/examples&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;N.B.: rackt-cli can also be used to &lt;code class=&quot;highlighter-rouge&quot;&gt;build&lt;/code&gt; your react component and you can preview your demo using &lt;code class=&quot;highlighter-rouge&quot;&gt;rackt server&lt;/code&gt; and… much more! Just check &lt;a href=&quot;https://github.com/mzabriskie/rackt-cli&quot;&gt;the documentation&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Thu, 05 Nov 2015 04:31:19 +1300</pubDate>
        <link>http://vincentaudebert.github.io/javascript/react/2015/11/05/publish-demo-react-component/</link>
        <guid isPermaLink="true">http://vincentaudebert.github.io/javascript/react/2015/11/05/publish-demo-react-component/</guid>
      </item>
    
      <item>
        <title>Python SQLAlchemy cascade delete</title>
        <description>&lt;p&gt;Quick tip if you get in trouble with a foreign key dependency even if you have specified a cascade delete in your models.&lt;/p&gt;

&lt;p&gt;Using SQLAlchemy, to specify a cascade delete you should have &lt;code class=&quot;highlighter-rouge&quot;&gt;cascade=&#39;all, delete&#39;&lt;/code&gt; on your parent table.
Ok but then when you execute something like:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;models&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;yourmodule&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;YourParentTable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conditions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;delete&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;It actually triggers an error about a foreign key used in your children tables.&lt;/p&gt;

&lt;p&gt;The solution I used it to query the object and then delete it:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;session&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;models&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DBSession&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;your_db_object&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;models&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;yourmodule&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;YourParentTable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conditions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;your_db_object&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;delete&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;your_db_object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This should delete your parent record AND all the children associated with it.&lt;/p&gt;
</description>
        <pubDate>Sat, 10 Oct 2015 04:31:19 +1300</pubDate>
        <link>http://vincentaudebert.github.io/python/sql/2015/10/10/cascade-delete-sqlalchemy/</link>
        <guid isPermaLink="true">http://vincentaudebert.github.io/python/sql/2015/10/10/cascade-delete-sqlalchemy/</guid>
      </item>
    
      <item>
        <title>AngularJS $http error callback not executed</title>
        <description>&lt;p&gt;Just found a solution to my problem and thought it would be a good idea to share it.
Few days ago we changed our structure and we are now using factories to call our API and return promises.&lt;/p&gt;

&lt;p&gt;Unfortunately, we realized that since we made this change our &lt;code class=&quot;highlighter-rouge&quot;&gt;error&lt;/code&gt; callbacks were not executed anymore.&lt;/p&gt;

&lt;p&gt;I first thought the problem was linked somehow to the server return as we changed the way we handle exceptions. But it was not.&lt;/p&gt;

&lt;p&gt;The real weird thing was that we were always going into the &lt;code class=&quot;highlighter-rouge&quot;&gt;success&lt;/code&gt; callback and never into the &lt;code class=&quot;highlighter-rouge&quot;&gt;error&lt;/code&gt; one even with an error 500 or 404 or whatever…&lt;/p&gt;

&lt;p&gt;So I googled it (quite a lot) and then found this brilliant &lt;a href=&quot;http://stackoverflow.com/questions/15888162/angularjs-http-error-function-never-called&quot;&gt;stackoverflow answer&lt;/a&gt; which gives the right answer (for me) on the second answer.&lt;/p&gt;

&lt;p&gt;Here was my problem. I was intercepting the errors like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;$httpProvider&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;interceptors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$timeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$q&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$injector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;responseError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;rejection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;rejection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;status&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;403&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;growl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;Access denied&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rejection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;rejection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;status&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;401&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rejection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;But as it says on SO answer it should have been:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;$httpProvider&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;interceptors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$timeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$q&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$injector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;responseError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;rejection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;rejection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;status&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;403&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;growl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;Access denied&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$q&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;reject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;rejection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;rejection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;status&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;401&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$q&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;reject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;rejection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Indeed in case your promise gets rejected, you need to return it otherwise Angular thinks that everything is fine and go through the &lt;code class=&quot;highlighter-rouge&quot;&gt;success&lt;/code&gt; callback!&lt;/p&gt;

&lt;p&gt;Hope this helps!&lt;/p&gt;

</description>
        <pubDate>Fri, 04 Sep 2015 03:31:19 +1200</pubDate>
        <link>http://vincentaudebert.github.io/angularjs/http/callback/2015/09/04/error-callback-not-executed/</link>
        <guid isPermaLink="true">http://vincentaudebert.github.io/angularjs/http/callback/2015/09/04/error-callback-not-executed/</guid>
      </item>
    
      <item>
        <title>OneAll - Polymer element</title>
        <description>&lt;p&gt;Recently I was looking for a service that could provide a user authentication based on social networks.
I ended on &lt;a href=&quot;http://www.oneall.com&quot;&gt;oneall.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After having a look at the documentation I decided to build a polymer element for this service.&lt;/p&gt;

&lt;p&gt;A month ago, I released v1.0 but this version did not include premium methods.
Here comes &lt;a href=&quot;https://github.com/vincentaudebert/polymer-oneall-social-login/tree/v1.1.0&quot;&gt;v1.1&lt;/a&gt; that now supports all the methods provided by OneAll.&lt;/p&gt;

&lt;p&gt;Feel free to participate to this repo.&lt;/p&gt;

&lt;p&gt;To give you a preview, this is what you need to display this service on your website:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;oneall-social-login&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;oneall-container&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Login here&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt; [if you use attachPopupUi]
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;oneall-container&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Login here&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt; [if you use doRenderUi]
  [leave empty if you use doPopupUi]
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/oneall-social-login&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;You can find more examples in the &lt;code class=&quot;highlighter-rouge&quot;&gt;demo&lt;/code&gt; folder on github.&lt;/p&gt;

</description>
        <pubDate>Sat, 08 Aug 2015 03:31:19 +1200</pubDate>
        <link>http://vincentaudebert.github.io/polymer/element/2015/08/08/polymer-element-oneall/</link>
        <guid isPermaLink="true">http://vincentaudebert.github.io/polymer/element/2015/08/08/polymer-element-oneall/</guid>
      </item>
    
      <item>
        <title>Twitter Bootstrap 3 - Change your navbar colors</title>
        <description>&lt;p&gt;Really quick article about a cool tool.&lt;/p&gt;

&lt;p&gt;Few weeks ago I had to change my navbar colors and could not be bothered going through all the CSS files to modify all the colors etc…&lt;/p&gt;

&lt;p&gt;I found &lt;a href=&quot;http://twitterbootstrap3navbars.w3masters.nl/?color=%234066b9&amp;amp;linkcolor=%23fff&amp;amp;activelinkcolor=%23f6f6f6&amp;amp;gradient=0&amp;amp;gradient=1&amp;amp;borders=0&quot;&gt;this awesome and really simple website&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Just select your colors and then it will generate all the CSS classes you need to implement to modify your colors.
You need to add the generated CSS to your CSS file and then apply &lt;code class=&quot;highlighter-rouge&quot;&gt;navbar-custom&lt;/code&gt; class to your navbar and colors will change as you set it up!&lt;/p&gt;

&lt;p&gt;Hope this helps!&lt;/p&gt;

</description>
        <pubDate>Wed, 29 Jul 2015 03:31:19 +1200</pubDate>
        <link>http://vincentaudebert.github.io/css/color/generator/2015/07/29/twitter-bootstrap-change-color-navbar/</link>
        <guid isPermaLink="true">http://vincentaudebert.github.io/css/color/generator/2015/07/29/twitter-bootstrap-change-color-navbar/</guid>
      </item>
    
      <item>
        <title>Google Picker dialog behind bootstrap modal</title>
        <description>&lt;p&gt;Another article talking about Google API and it’s awesome Google Picker which allows you to pick files from your Google Drive.&lt;/p&gt;

&lt;p&gt;I tried to display it on top of a modal on my screen and I could not see the Google Picker dialog showing up.
It was simply hidden behind the modal.&lt;/p&gt;

&lt;p&gt;And here comes &lt;code class=&quot;highlighter-rouge&quot;&gt;z-index&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Using jQuery, the best solution is to change on the fly &lt;code class=&quot;highlighter-rouge&quot;&gt;z-index&lt;/code&gt; property for class &lt;code class=&quot;highlighter-rouge&quot;&gt;.picker-dialog&lt;/code&gt;.
Use a &lt;code class=&quot;highlighter-rouge&quot;&gt;z-index&lt;/code&gt; &amp;gt; 1050 or the value of your modal one.&lt;/p&gt;

&lt;p&gt;Here is the code I use.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;.picker-dialog&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;css&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;z-index&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Hope this helps!&lt;/p&gt;

&lt;p&gt;Article inspired by &lt;a href=&quot;https://github.com/softmonkeyjapan/angular-google-picker/issues/4&quot;&gt;this github issue&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Sat, 27 Jun 2015 03:31:19 +1200</pubDate>
        <link>http://vincentaudebert.github.io/google/picker/dialog/css/2015/06/27/google-picker-dialog-z-index/</link>
        <guid isPermaLink="true">http://vincentaudebert.github.io/google/picker/dialog/css/2015/06/27/google-picker-dialog-z-index/</guid>
      </item>
    
  </channel>
</rss>
